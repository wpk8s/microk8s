#!/usr/bin/env bash

set -eu

source "$SNAP/actions/common/utils.sh"

OPENEBS_NS="openebs"

print_iscsi_help() {
    echo "Make sure iscsi is installed on all nodes."
    echo "To enable iscsid: "
    echo "      sudo systemctl enable iscsid"
    echo "Please refer to the OpenEBS prerequisites (https://docs.openebs.io/docs/next/prerequisites.html)"
}

print_nfsc_help() {
    echo "Make sure nfs client is installed on all nodes."
    echo "To enable nfs client: "
    echo "      sudo systemctl enable nfs-common"
    echo "Please refer to the OpenEBS prerequisites (https://docs.openebs.io/docs/next/prerequisites.html)"
    echo "Might be different on non Ubuntu/Debian distributions"
}

# Check if iscsid is installed
if ! is_strict && ! systemctl is-enabled iscsid | grep enabled &> /dev/null
  then
    echo "iscsid is not available or enabled."
    print_iscsi_help
    exit   
fi

if ! is_strict && systemctl is-enabled nfs-common | grep enabled &> /dev/null
  then "nfs client is not available or enabled."
  print_nfsc_help
  exit
fi

"$SNAP/microk8s-enable.wrapper" dns
"$SNAP/microk8s-enable.wrapper" helm3

HELM="$SNAP/microk8s-helm3.wrapper"

$HELM repo add openebs https://openebs.github.io/charts
$HELM repo update
$HELM install openebs openebs/openebs --namespace $OPENEBS_NS --create-namespace \
    --version 3.3.x \
    --set legacy.enabled=false \
    --set varDirectoryPath.baseDir="$SNAP_COMMON/var/openebs" \
    --set openebs-ndm.enabled=true \
    --set localpv-provisioner.enabled=true \
    --set localprovisioner.basePath="$SNAP_COMMON/var/openebs/local" \
    --set jiva.enabled=true \
    --set jiva.storageClass.name=openebs-jiva \
    --set jiva.storageClass.isDefaultClass=true \
    --set jiva.csiNode.kubeletDir="$SNAP_COMMON/var/lib/kubelet/" \
    --set nfs-provisioner.enabled=true \
    --set nfs-provisioner.nfsStorageClass.backendStorageClass=openebs-jiva


echo "OpenEBS is installed"

# Help sections
echo "" 
echo "" 
echo "-----------------------"
echo "" 
echo "If you are planning to use OpenEBS with multi nodes, you can use the openebs-jiva StorageClass."
echo "The class should be enabled as default."
echo "An example of creating a PersistentVolumeClaim utilizing the openebs-jiva StorageClass"
echo "" 
echo "" 
echo "kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jiva-volume-claim
spec:
  storageClassName: openebs-jiva
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5G
"
echo "" 
echo "If you are planning to use OpenEBS with RWX accessModes, than use openebs-kernel-nfs StorageClass"
echo "An example of creating a PersistentVolumeClaim utilizing the openebs-kernel-nfs StorageClass"
echo "" 
echo "" 
echo "kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nfs-volume-claim
spec:
  storageClassName: openebs-kernel-nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5G
"

if is_strict
then
  print_iscsi_help
  print_nfsc_help
fi
